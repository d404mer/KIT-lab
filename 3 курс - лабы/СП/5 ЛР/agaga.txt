.model tiny
.org 100h             ; Устанавливаем точку входа для COM-программы

.code
start:
    mov ax, 0b800h    ; Адрес видеопамяти для текстового режима
    mov es, ax        ; Устанавливаем сегмент ES на адрес видеопамяти
    mov di, 0         ; Указатель на начало видеопамяти (верхний левый угол экрана)
    
    mov al, 0B2h      ; Задаем ASCII-код B2h
    mov ah, 3Fh       ; Цвет символа: белый на бирюзовом фоне
    stosw             ; Записываем символ и его цвет в видеопамять

    ; Завершение программы
    mov ax, 4c00h
    int 21h
end start


ßßßßßßßßßßßßß

.model tiny
.org 100h             ; Устанавливаем точку входа для COM-программы

.code
start:
    ; Ожидание нажатия любой клавиши
    mov ah, 01h       ; Функция 01h - чтение символа с клавиатуры
    int 21h           ; Вызов прерывания, ждет нажатия клавиши

    ; Вывод символа B2h на экран
    mov ax, 0b800h    ; Адрес видеопамяти для текстового режима
    mov es, ax        ; Устанавливаем сегмент ES на адрес видеопамяти
    mov di, 0         ; Указатель на начало видеопамяти (верхний левый угол экрана)
    
    mov al, 0AFh       ; Задаем ASCII-код 0AFh 
    mov ah, 3Fh       ; Цвет символа: белый на бирюзовом фоне
    stosw             ; Записываем символ и его цвет в видеопамять

    ; Завершение программы
    mov ax, 4c00h
    int 21h
end start


--------------------
.model tiny
.org 100h

.data
st_off dw 0
st_seg dw 0

.code
start:
    mov ah, 35h
    mov al, 9h
    int 21h
    mov st_off, bx
    mov st_seg, es

    mov dx, offset my_handler
    mov ax, 2509h
    int 21h

    mov ah, 01h
    int 21h

    mov ax, 4c00h
    int 21h

my_handler proc
    push ax
    push bx
    push cx
    push dx
    push ds
    push es
    pushf

    mov ax, 0b800h
    mov es, ax
    mov di, 0
    mov al, 0B2h
    mov ah, 3Fh
    stosw

    mov ax, st_seg
    mov ds, ax
    call dword ptr [st_off]

    popf
    pop es
    pop ds
    pop dx
    pop cx
    pop bx
    pop ax
    iret
my_handler endp
end start
