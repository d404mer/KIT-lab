1. **Прерывание** — это событие, временно прекращающее выполнение программы для обработки каких-либо других задач.
2. **Виды прерываний**: аппаратные и программные.
3. **Внешние прерывания** — вызваны внешними событиями, например, сигналами от устройств (клавиатура, мышь).
4. **Внутренние прерывания** — связаны с исключительными ситуациями, возникающими в процессе выполнения программ (деление на ноль, нарушение доступа).
5. **Система обработки прерываний** включает обработчик прерываний, вектор прерываний и механизмы сохранения контекста.
6. **Аппаратные средства** — это устройства, генерирующие прерывания (клавиатура, таймер).
7. **Программные средства** — это программы и библиотеки, которые манипулируют и обрабатывают прерывания.
8. **Команда** для вызова прерываний — INT.
9. **Бит флага** — IF (Interrupt Flag).
10. **Команда** для запрета прерываний — CLI.
11. **Команда** для разрешения прерываний — STI.
12. **Команда** для возврата из обработчика прерываний — IRET.
13. **Вектор прерываний** — это адрес обработчика прерывания.
14. **Адрес таблицы** векторов прерываний — 0x0000 (в реальных режимах для x86).
15. **Длина** каждого вектора прерывания — 4 байта (по 2 для адреса и сегмента).
16. **Младшее слово** вектора прерываний хранит адрес обработчика.
17. **Старшее слово** вектора прерываний хранит сегмент обработчика.
18. **Сохранение контекста** — это процесс сохранения состояния прерванной программы (регистр, процессорное состояние).
19. Действия при возникновении прерывания: сохранить контекст, определить источник прерывания, выполнить обработчик, восстановить контекст.
20. **Перехват прерываний** — замена стандартного обработчика на собственный.
21. Для перехвата прерывания необходимо изменить вектор прерывания.
22. **Функции прерывания INT 21h**: 25h и 35h для перехвата.
23. **Функция 25h INT 21h** устанавливает новый обработчик прерываний.
24. **Функция 35h INT 21h** получает адрес текущего обработчика прерывания.
25. **Два вида аппаратных прерываний**: маскируемые и немаскируемые.
26. **Наиболее важные аппаратные прерывания**: таймера и прерывания ввода-вывода.
27. Замена стандартного обработчика возможна, но может повлиять на стабильность системы.
28. Способы вызова стандартного обработчика: ручной вызов и автоматический при прерывании.
29. Вывод сообщений при перехвате — через использование вывода в видеопамять или через системные вызовы.
30. **Адрес видеопамяти** — 0xB8000 в текстовом режиме для x86.
31. Один символ на экран занимает 2 байта.
32. **Младший байт** определяет символ, выводимый на экран.
33. **Старший байт** определяет атрибут (цвет) символа.
34. Цвет символа и фона определяется старшим байтом слова видеопамяти.
35. Вывод символа в заданную позицию производится изменением соответствующей ячейки видеопамяти.
