.model tiny
.data
st_off dw 0 ; смещение стандартного обработчика
st_seg dw 0 ; сегментный адрес стандартного обработчика
.code
n: push cs
   pop ds

; Получение адреса стандартного обработчика прерывания 5h
   mov ah, 35h
   mov al, 5h ; номер прерывания 5h
   int 21h    ; вызов функции 35h для получения адреса

; Сохранение сегмента и смещения стандартного обработчика
   mov st_seg, es ; сохранить сегментный адрес обработчика 5h
   mov st_off, bx ; сохранить смещение обработчика 5h

; Установка пользовательского обработчика прерывания 5h
   lea dx, prog   ; загрузка смещения нашего обработчика в dx
   mov ax, 2505h  ; 25h - функция установки обработчика, 5h - номер прерывания
   int 21h        ; вызов функции 25h для установки нового обработчика

; Вызов прерывания 5h
   int 5h         ; вызов пользовательского обработчика прерывания 5h

; Восстановление стандартного обработчика прерывания 5h
   mov ax, 2505h
   mov dx, st_off ; восстановление смещения стандартного обработчика
   mov ds, st_seg ; восстановление сегмента стандартного обработчика
   int 21h        ; вызов функции 25h для восстановления стандартного обработчика

; Завершение программы
   mov ax, 4c00h
   int 21h        ; завершение программы

; Определение пользовательского обработчика прерывания
prog proc
   push ax        ; сохранение регистра AX
   push dx        ; сохранение регистра DX

; Вывод символа "M" на экран
   mov ah, 02h    ; функция вывода символа на экран
   mov dl, 'M'    ; в DL помещаем код символа "M"
   int 21h        ; вызов DOS-функции вывода

; Восстановление сохраненных регистров и выход
   pop dx         ; восстановление регистра DX
   pop ax         ; восстановление регистра AX
   iret           ; возврат управления прерванной программе
prog endp
end n
