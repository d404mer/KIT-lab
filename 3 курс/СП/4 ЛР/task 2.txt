; Program to replace positive elements of a word array with 1
.model small

; Data segment where the stack and data will be defined
.data
    mas1 dw 1, -2, 3, 4, -5  ; First array with word elements
    mas2 dw -6, 7, -8, 9, 10 ; Second array with word elements

; Stack segment (optional since we are using .data for both)
.stack 100h

; Code segment
.code
main:
    mov ax, @data
    mov ds, ax           ; Initialize data segment

    ; Call the procedure to replace positive elements in the first array
    lea bx, mas1         ; Load address of the first array
    push bx              ; Push address onto the stack
    push 5               ; Push number of elements onto the stack
    call ReplacePositive  ; Call the procedure

    ; Call the procedure to replace positive elements in the second array
    lea bx, mas2         ; Load address of the second array
    push bx              ; Push address onto the stack
    push 5               ; Push number of elements onto the stack
    call ReplacePositive  ; Call the procedure

    ; Terminate the program
    mov ax, 4C00h        ; Terminate program
    int 21h

; Procedure to replace positive elements of an array with 1
ReplacePositive proc near
    push bp
    mov bp, sp           ; Set up stack frame
    mov cx, [bp+4]      ; Get number of elements in the array
    mov bx, [bp+6]      ; Get address of the array
    xor si, si           ; Initialize index to 0

CheckElement:
    mov ax, [bx+si]      ; Read the array element
    cmp ax, 0            ; Compare with 0
    jle NextElement      ; Jump if the element <= 0
    mov word ptr [bx+si], 1 ; Replace positive element with 1

NextElement:
    add si, 2            ; Move to the next element (word size)
    loop CheckElement     ; Repeat for all elements

    pop bp
    ret 4                 ; Clean up the stack
ReplacePositive endp

end main


---------
.model small
.data
    mas1 dw 28, -2, 3, 4, -5
    mas2 dw -6, 7, -8, 9, 10
.stack 100h
.code
main:
    mov ax, @data
    mov ds, ax

    lea bx, mas1
    push bx
    push 5
    call ReplacePositive

    lea bx, mas2
    push bx
    push 5
    call ReplacePositive

    mov ax, 4C00h
    int 21h

ReplacePositive proc near
    push bp
    mov bp, sp
    mov cx, [bp+4]
    mov bx, [bp+6]
    xor si, si

CheckElement:
    mov ax, [bx+si]
    cmp ax, 0
    jle NextElement
    mov word ptr [bx+si], 1

NextElement:
    add si, 2
    loop CheckElement

    pop bp
    ret 4
ReplacePositive endp

end main

